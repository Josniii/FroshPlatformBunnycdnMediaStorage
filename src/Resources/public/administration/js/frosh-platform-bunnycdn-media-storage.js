(this.webpackJsonp=this.webpackJsonp||[]).push([["frosh-platform-bunnycdn-media-storage"],{EEnM:function(e,n,t){"use strict";t.r(n);t("NoYw");var i=t("RbR4"),s=t.n(i);const{Component:c,Mixin:o}=Shopware;c.register("bunnycdn-api-test-button",{template:s.a,props:["label"],inject:["bunnycdnApiTest"],mixins:[o.getByName("notification")],data:()=>({isLoading:!1,isSaveSuccessful:!1}),computed:{pluginConfig(){return this.$parent.$parent.$parent.actualConfigData.null}},methods:{saveFinish(){this.isSaveSuccessful=!1},check(){this.isLoading=!0,this.bunnycdnApiTest.check(this.pluginConfig).then(e=>{e.success?(this.isSaveSuccessful=!0,this.createNotificationSuccess({title:this.$tc("bunnycdn-api-test-button.title"),message:this.$tc("bunnycdn-api-test-button.success")})):this.createNotificationError({title:this.$tc("bunnycdn-api-test-button.title"),message:this.$tc("bunnycdn-api-test-button.error")}),setTimeout(()=>{this.isLoading=!1},2500)})}}});t("xYjY");var a=t("wYJH"),r=t.n(a);const{Component:u}=Shopware;u.register("bunnycdn-config-info-garbage",{template:r.a});var d=t("mkHF"),p=t("xf34");Shopware.Locale.extend("de-DE",d),Shopware.Locale.extend("en-GB",p)},NoYw:function(e,n){const t=Shopware.Classes.ApiService,{Application:i}=Shopware;class s extends t{constructor(e,n,t="bunnycdn-api-test"){super(e,n,t)}check(e){const n=this.getBasicHeaders({});return this.httpClient.post(`_action/${this.getApiBasePath()}/check`,e,{headers:n}).then(e=>t.handleResponse(e))}}i.addServiceProvider("bunnycdnApiTest",e=>{const n=i.getContainer("init");return new s(n.httpClient,e.loginService)})},RbR4:function(e,n){e.exports='<div>\n    <sw-button-process\n        :isLoading="isLoading"\n        :processSuccess="isSaveSuccessful"\n        @process-finish="saveFinish"\n        @click="check"\n    >{{ label }}</sw-button-process>\n</div>\n'},mkHF:function(e){e.exports=JSON.parse('{"bunnycdn-api-test-button":{"title":"API Test","success":"Verbindung wurde erfolgreich getestet","error":"Verbindung konnte nicht hergestellt werden. Bitte prüfe die Konfiguration."},"bunnycdn-config-info-garbage":{"text":"Beim Löschen, Umbenennen und Überschreiben von Dateien werden diese in einem Ordner mit dem Namen \\"garbage/aktuellesDatum/\\" gesichert.\\nDies gilt nur für Filesysteme, die bunnycdn verwenden"}}')},wYJH:function(e,n){e.exports="{% block bunnycdn_config_info_garbage %}\n<div class=\"bunnycdn-info-texts\">\n    <p>\n        {{ $tc('bunnycdn-config-info-garbage.text') }}\n    </p>\n</div>\n{% endblock %}\n"},xYjY:function(e,n){const{Component:t,Mixin:i}=Shopware;t.register("bunnycdn-config-restriction",{template:" ",created(){this.checkAndHideSetting()},updated(){this.checkAndHideSetting()},methods:{checkAndHideSetting(){const e=document.querySelectorAll('input[name^="FroshPlatformBunnycdnMediaStorage.config"],.sw-plugin-config__save-action');this.$parent.$parent.$parent.currentSalesChannelId?e.forEach(e=>{e.setAttribute("disabled","disabled")}):e.forEach(e=>{e.removeAttribute("disabled")})}}})},xf34:function(e){e.exports=JSON.parse('{"bunnycdn-api-test-button":{"title":"API Test","success":"Connection was successfully tested","error":"Connection could not be established. Please check the config."},"bunnycdn-config-info-garbage":{"text":"When deleting, renaming, overwriting files, they will be backuped into folder named \\"garbage/currentDate/\\".\\nThis applies just on filesystems using bunnycdn"}}')}},[["EEnM","runtime"]]]);